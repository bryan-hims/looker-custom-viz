{"version":3,"file":"buildGroupedColumns.js","names":["buildDimensionColumns","buildMeasureColumns","nestPivotedFields","buildGroupedColumns","props","fields","pivots","config","reversedPivots","reverse","dimensionColumns","dimensions","nestedDimensions","pivotList","pivotIndex","nestedPivots","measureColumns","measures","nestedMeasures","Object","entries","reduce","groups","pivotKey","pivot","find","p","key","columnGroups","pivotValues"],"sources":["../../../src/utils/buildGroupedColumns.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { SDKRecord, TableProps } from '@looker/visualizations-adapters'\nimport type { ColumnDef } from '@tanstack/table-core'\nimport {\n  buildDimensionColumns,\n  buildMeasureColumns,\n  nestPivotedFields,\n} from '.'\n\ntype GroupedColumnProps = Required<\n  Pick<TableProps, 'fields' | 'pivots' | 'config'>\n>\n\n/**\n * Configures nested/grouped table headers\n * which are displayed for pivoted queries.\n * @param props: fields and pivots metadata\n * @returns nested column configuration for tanstack table\n */\n\nexport const buildGroupedColumns = (\n  props: GroupedColumnProps\n): ColumnDef<SDKRecord>[] => {\n  const { fields, pivots, config } = props\n\n  // Header rows are rendered last-to-first from the pivots array,\n  // so must be reversed before beginning render process.\n  const reversedPivots = [...(fields.pivots || [])].reverse()\n\n  const dimensionColumns = buildDimensionColumns(fields.dimensions)\n\n  const nestedDimensions = nestPivotedFields({\n    pivotList: reversedPivots,\n    pivotIndex: 0,\n    nestedPivots: dimensionColumns,\n  })\n\n  const measureColumns = buildMeasureColumns(fields.measures, config)\n\n  const nestedMeasures = Object.entries(measureColumns).reduce<\n    ColumnDef<SDKRecord>[]\n  >((groups, [pivotKey, measures]) => {\n    const pivot = pivots.find(p => p.key === pivotKey)\n    const columnGroups = nestPivotedFields({\n      pivotList: reversedPivots,\n      pivotIndex: 0,\n      nestedPivots: measures,\n      pivotValues: pivot,\n    })\n    return [...groups, columnGroups]\n  }, [])\n\n  return [nestedDimensions, ...nestedMeasures]\n}\n"],"mappings":";;AAOA,SACEA,qBAAqB,EACrBC,mBAAmB,EACnBC,iBAAiB,QACZ,GAAG;;AAaV,OAAO,MAAMC,mBAAmB,GAC9BC,KAAyB,IACE;EAC3B,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGH,KAAK;;EAIxC,MAAMI,cAAc,GAAG,CAAC,IAAIH,MAAM,CAACC,MAAM,IAAI,EAAE,CAAC,CAAC,CAACG,OAAO,EAAE;EAE3D,MAAMC,gBAAgB,GAAGV,qBAAqB,CAACK,MAAM,CAACM,UAAU,CAAC;EAEjE,MAAMC,gBAAgB,GAAGV,iBAAiB,CAAC;IACzCW,SAAS,EAAEL,cAAc;IACzBM,UAAU,EAAE,CAAC;IACbC,YAAY,EAAEL;EAChB,CAAC,CAAC;EAEF,MAAMM,cAAc,GAAGf,mBAAmB,CAACI,MAAM,CAACY,QAAQ,EAAEV,MAAM,CAAC;EAEnE,MAAMW,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACJ,cAAc,CAAC,CAACK,MAAM,CAE1D,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAEN,QAAQ,CAAC,KAAK;IAClC,MAAMO,KAAK,GAAGlB,MAAM,CAACmB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKJ,QAAQ,CAAC;IAClD,MAAMK,YAAY,GAAG1B,iBAAiB,CAAC;MACrCW,SAAS,EAAEL,cAAc;MACzBM,UAAU,EAAE,CAAC;MACbC,YAAY,EAAEE,QAAQ;MACtBY,WAAW,EAAEL;IACf,CAAC,CAAC;IACF,OAAO,CAAC,GAAGF,MAAM,EAAEM,YAAY,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAAChB,gBAAgB,EAAE,GAAGM,cAAc,CAAC;AAC9C,CAAC"}