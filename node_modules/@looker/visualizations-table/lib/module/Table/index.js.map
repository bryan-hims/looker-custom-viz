{"version":3,"file":"index.js","names":["React","useRef","getSeriesMax","getSeriesMin","DEFAULT_HEIGHT","DEFAULT_EMPTY_FIELDS","flexRender","styled","css","IconButton","Truncate","Box","Grid","useHeadlessTable","useVirtual","useTranslation","getSortAssets","normalizeHeaderColumns","CellVisualization","ColumnTotals","TableCell","TableHeadCell","numeral","get","Table","config","column_order","show_row_numbers","type","data","fields","height","pivots","width","totals","defaultRowHeight","t","scrollContainer","table","sorting","handleTableSort","tableRows","getRowModel","rows","dataToVirtualize","map","row","getVisibleCells","virtualizerAssets","virtualRows","virtualColumns","OffsetTop","OffsetBottom","OffsetLeft","OffsetRight","series","truncate_text","truncate_header","seriesMinMax","Object","fromEntries","measures","name","min","max","headerGroups","rowNumWidth","String","length","headerGroup","i","undefined","index","columnIndex","measureElement","size","header","headers","headerContent","column","columnDef","columnSortState","find","s","id","SortIcon","sortText","ariaSort","colSpan","getContext","e","rowIndex","tableRow","cell","measureIndex","findIndex","m","columnConfig","Array","isArray","cellContent","Infinity","valueFormat","CellValue","getValue","cell_visualization","color","Number","format","CellContentWrapper","children","truncateText","HeaderContentWrapper","truncateHeader","props","PlaceholderElement","div","attrs","style","minWidth","ScrollWrapper","TableElement","theme","colors","text5","fonts","body","THead","thead","TFoot","tfoot","TBody","tbody","TableRow","tr","ui1","background","CellContentLayout","space","xxsmall","TableHeadLayout","u16","sortButtonDefaultVisible"],"sources":["../../../src/Table/index.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useRef } from 'react'\nimport type { FC } from 'react'\nimport type { TableProps, CTableSeries } from '@looker/visualizations-adapters'\nimport {\n  getSeriesMax,\n  getSeriesMin,\n  DEFAULT_HEIGHT,\n  DEFAULT_EMPTY_FIELDS,\n} from '@looker/visualizations-adapters'\nimport { flexRender } from '@tanstack/react-table'\nimport styled, { css } from 'styled-components'\nimport { IconButton, Truncate, Box, Grid } from '@looker/components'\nimport { useHeadlessTable, useVirtual } from '../hooks'\nimport { useTranslation, getSortAssets, normalizeHeaderColumns } from '../utils'\nimport { CellVisualization } from '../CellVisualization'\nimport { ColumnTotals } from '../ColumnTotals'\nimport { TableCell } from '../TableCell'\nimport { TableHeadCell } from '../TableHeadCell'\n\nimport numeral from 'numeral'\nimport get from 'lodash/get'\n\nexport const Table = ({\n  config = { column_order: [], show_row_numbers: true, type: 'table' },\n  data = [],\n  fields = DEFAULT_EMPTY_FIELDS,\n  height = DEFAULT_HEIGHT,\n  pivots,\n  width,\n  totals,\n  defaultRowHeight,\n}: TableProps) => {\n  const { t } = useTranslation('Table')\n\n  const scrollContainer = useRef<HTMLDivElement>(null)\n\n  const { table, sorting, handleTableSort } = useHeadlessTable({\n    data,\n    config,\n    fields,\n    pivots,\n  })\n\n  const tableRows = table.getRowModel().rows\n\n  const dataToVirtualize = tableRows.map(row => row.getVisibleCells())\n\n  const virtualizerAssets = useVirtual({\n    data: dataToVirtualize,\n    scrollContainer,\n    defaultRowHeight,\n  })\n\n  const {\n    virtualRows,\n    virtualColumns,\n    OffsetTop,\n    OffsetBottom,\n    OffsetLeft,\n    OffsetRight,\n  } = virtualizerAssets\n\n  const {\n    series = {},\n    show_row_numbers,\n    truncate_text,\n    truncate_header,\n  } = config\n\n  const seriesMinMax = Object.fromEntries(\n    fields.measures.map(({ name }) => {\n      const min = getSeriesMin(name, data)\n      const max = getSeriesMax(name, data)\n      return [name, { min, max }]\n    })\n  )\n\n  const headerGroups = normalizeHeaderColumns(table)\n\n  const rowNumWidth = String(data.length).length * 10\n\n  return (\n    <ScrollWrapper width={width} height={height} ref={scrollContainer}>\n      <TableElement cellSpacing=\"0\">\n        <THead>\n          {headerGroups.map((headerGroup, i) => {\n            return (\n              <tr key={`theadRow${i}`}>\n                <OffsetLeft as=\"th\" />\n\n                {show_row_numbers ? (\n                  <TableHeadCell stickyLeft>\n                    <PlaceholderElement width={rowNumWidth} />\n                  </TableHeadCell>\n                ) : undefined}\n\n                {virtualColumns.map(\n                  ({ index: columnIndex, measureElement, size }) => {\n                    const header = headerGroup.headers[columnIndex]\n\n                    if (header) {\n                      const { header: headerContent } = header.column.columnDef\n\n                      const columnSortState = sorting.find(\n                        s => s.id === header.id\n                      )\n\n                      const { SortIcon, sortText, ariaSort } = getSortAssets(\n                        t,\n                        columnSortState\n                      )\n\n                      return (\n                        <TableHeadCell\n                          key={header.id}\n                          colSpan={header.colSpan}\n                          aria-sort={ariaSort}\n                        >\n                          <TableHeadLayout\n                            sortButtonDefaultVisible={!!columnSortState}\n                            ref={measureElement}\n                            width={size}\n                          >\n                            <HeaderContentWrapper\n                              truncateHeader={!!truncate_header}\n                              data-testid=\"columnheader-label\"\n                            >\n                              {flexRender(headerContent, header.getContext())}\n                            </HeaderContentWrapper>\n                            {i === headerGroups.length - 1 && (\n                              /* only render sort button in last header row */\n                              <IconButton\n                                icon={<SortIcon />}\n                                label={sortText}\n                                outline\n                                shape=\"square\"\n                                size=\"xxsmall\"\n                                onClick={e => handleTableSort(header, e)}\n                              />\n                            )}\n                          </TableHeadLayout>\n                        </TableHeadCell>\n                      )\n                    } else {\n                      return null\n                    }\n                  }\n                )}\n\n                <OffsetRight as=\"th\" />\n              </tr>\n            )\n          })}\n        </THead>\n        <TBody>\n          <OffsetTop />\n          {virtualRows.map(({ index: rowIndex, measureElement, size }) => {\n            const tableRow = tableRows[rowIndex]\n\n            return (\n              <TableRow key={tableRow.id} ref={measureElement} height={size}>\n                <OffsetLeft />\n\n                {show_row_numbers ? (\n                  <TableCell stickyLeft>{rowIndex + 1}</TableCell>\n                ) : undefined}\n\n                {virtualColumns.map(({ index: columnIndex }) => {\n                  const { column, getContext, ...cell } =\n                    dataToVirtualize[rowIndex][columnIndex]\n\n                  const measureIndex = fields.measures.findIndex(\n                    m => m.name === column.id\n                  )\n                  const columnConfig: CTableSeries = Array.isArray(series)\n                    ? series[measureIndex]\n                    : series[column.id]\n\n                  const { cell: cellContent } = column.columnDef\n\n                  const { max, min } = seriesMinMax?.[column.id] || {\n                    max: Infinity,\n                    min: 0,\n                  }\n\n                  const valueFormat = Array.isArray(series)\n                    ? get(series, [measureIndex, 'value_format'])\n                    : get(series, [column.id, 'value_format'])\n\n                  const CellValue = cell.getValue()\n\n                  return (\n                    <TableCell key={cell.id}>\n                      {typeof CellValue === 'function' ? (\n                        <CellValue />\n                      ) : (\n                        <CellContentLayout>\n                          {columnConfig?.cell_visualization ? (\n                            <CellVisualization\n                              color={columnConfig.color}\n                              min={min}\n                              max={max}\n                              value={Number(cell.getValue())}\n                            />\n                          ) : null}\n                          <CellContentWrapper truncateText={!!truncate_text}>\n                            {valueFormat\n                              ? numeral(Number(cell.getValue())).format(\n                                  valueFormat\n                                )\n                              : flexRender(cellContent, getContext())}\n                          </CellContentWrapper>\n                        </CellContentLayout>\n                      )}\n                    </TableCell>\n                  )\n                })}\n              </TableRow>\n            )\n          })}\n          <OffsetBottom />\n        </TBody>\n        <TFoot>\n          <ColumnTotals\n            totals={totals}\n            config={config}\n            fields={fields}\n            virtualizerAssets={virtualizerAssets}\n            table={table}\n          />\n        </TFoot>\n      </TableElement>\n    </ScrollWrapper>\n  )\n}\n\n/**\n * Truncate table body content when truncateText is true\n */\nconst CellContentWrapper: FC<{ truncateText: boolean }> = ({\n  children,\n  truncateText,\n}) =>\n  truncateText ? (\n    <Grid columns={1} width=\"auto\">\n      <Truncate>{children}</Truncate>\n    </Grid>\n  ) : (\n    <>{children}</>\n  )\n\n/**\n * Truncate header text when truncateHeader is true\n */\nconst HeaderContentWrapper: FC<{ truncateHeader: boolean }> = ({\n  truncateHeader,\n  ...props\n}) => (truncateHeader ? <Truncate {...props} /> : <Box {...props} />)\n\nconst PlaceholderElement = styled.div.attrs<{ width?: number }>(\n  ({ width }) => ({ style: { minWidth: width } })\n)<{ width?: number }>``\n\nconst ScrollWrapper = styled.div<{ width?: number; height: number }>`\n  max-height: ${({ height }) => `${height}px`};\n  overflow: auto;\n  max-width: ${({ width }) => (width ? `${width}px` : `100%`)};\n  position: relative;\n`\n\nconst TableElement = styled.table`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.text5};\n  font-family: ${({ theme }) => theme.fonts.body};\n`\n\nconst THead = styled.thead`\n  top: 0;\n  position: sticky;\n  z-index: 1;\n`\n\nconst TFoot = styled.tfoot`\n  position: sticky;\n  bottom: 0px;\n`\n\nconst TBody = styled.tbody`\n  position: relative;\n  z-index: 0;\n`\n\nconst TableRow = styled.tr.attrs<{ height?: number }>(({ height }) => ({\n  height,\n}))<{ height?: number }>`\n  :nth-child(even) {\n    ${TableCell} {\n      background-color: ${({ theme }) => theme.colors.ui1};\n    }\n  }\n  :nth-child(odd) {\n    ${TableCell} {\n      background-color: ${({ theme }) => theme.colors.background};\n    }\n  }\n`\n\nconst CellContentLayout = styled.div`\n  align-items: center;\n  display: flex;\n  gap: ${({ theme }) => theme.space.xxsmall};\n`\n\nconst TableHeadLayout = styled.div.attrs<{ width?: number }>(({ width }) => ({\n  style: { minWidth: width },\n}))<{ width?: number; sortButtonDefaultVisible?: boolean }>`\n  display: grid;\n  grid-template-columns: minMax(${({ theme }) => theme.space.u16}, 1fr) auto;\n  grid-gap: ${({ theme }) => theme.space.xxsmall};\n  ${IconButton} {\n    ${({ sortButtonDefaultVisible }) =>\n      sortButtonDefaultVisible\n        ? css`\n            visibility: visible;\n          `\n        : css`\n            visibility: hidden;\n          `}\n  }\n  &:hover {\n    ${IconButton} {\n      visibility: visible;\n    }\n  }\n`\n"],"mappings":"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"}