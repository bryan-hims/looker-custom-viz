{"version":3,"file":"buildGroupedColumns.js","names":["buildGroupedColumns","props","fields","pivots","config","reversedPivots","reverse","dimensionColumns","buildDimensionColumns","dimensions","nestedDimensions","nestPivotedFields","pivotList","pivotIndex","nestedPivots","measureColumns","buildMeasureColumns","measures","nestedMeasures","Object","entries","reduce","groups","pivotKey","pivot","find","p","key","columnGroups","pivotValues"],"sources":["../../../src/utils/buildGroupedColumns.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { SDKRecord, TableProps } from '@looker/visualizations-adapters'\nimport type { ColumnDef } from '@tanstack/table-core'\nimport {\n  buildDimensionColumns,\n  buildMeasureColumns,\n  nestPivotedFields,\n} from '.'\n\ntype GroupedColumnProps = Required<\n  Pick<TableProps, 'fields' | 'pivots' | 'config'>\n>\n\n/**\n * Configures nested/grouped table headers\n * which are displayed for pivoted queries.\n * @param props: fields and pivots metadata\n * @returns nested column configuration for tanstack table\n */\n\nexport const buildGroupedColumns = (\n  props: GroupedColumnProps\n): ColumnDef<SDKRecord>[] => {\n  const { fields, pivots, config } = props\n\n  // Header rows are rendered last-to-first from the pivots array,\n  // so must be reversed before beginning render process.\n  const reversedPivots = [...(fields.pivots || [])].reverse()\n\n  const dimensionColumns = buildDimensionColumns(fields.dimensions)\n\n  const nestedDimensions = nestPivotedFields({\n    pivotList: reversedPivots,\n    pivotIndex: 0,\n    nestedPivots: dimensionColumns,\n  })\n\n  const measureColumns = buildMeasureColumns(fields.measures, config)\n\n  const nestedMeasures = Object.entries(measureColumns).reduce<\n    ColumnDef<SDKRecord>[]\n  >((groups, [pivotKey, measures]) => {\n    const pivot = pivots.find(p => p.key === pivotKey)\n    const columnGroups = nestPivotedFields({\n      pivotList: reversedPivots,\n      pivotIndex: 0,\n      nestedPivots: measures,\n      pivotValues: pivot,\n    })\n    return [...groups, columnGroups]\n  }, [])\n\n  return [nestedDimensions, ...nestedMeasures]\n}\n"],"mappings":";;;;;;;;;AAOA;;AAiBO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmB,CAC9BC,KAAyB,EACE;EAC3B,IAAQC,MAAM,GAAqBD,KAAK,CAAhCC,MAAM;IAAEC,MAAM,GAAaF,KAAK,CAAxBE,MAAM;IAAEC,MAAM,GAAKH,KAAK,CAAhBG,MAAM;;EAI9B,IAAMC,cAAc,GAAG,oCAAKH,MAAM,CAACC,MAAM,IAAI,EAAE,EAAGG,OAAO,EAAE;EAE3D,IAAMC,gBAAgB,GAAG,IAAAC,uBAAqB,EAACN,MAAM,CAACO,UAAU,CAAC;EAEjE,IAAMC,gBAAgB,GAAG,IAAAC,mBAAiB,EAAC;IACzCC,SAAS,EAAEP,cAAc;IACzBQ,UAAU,EAAE,CAAC;IACbC,YAAY,EAAEP;EAChB,CAAC,CAAC;EAEF,IAAMQ,cAAc,GAAG,IAAAC,qBAAmB,EAACd,MAAM,CAACe,QAAQ,EAAEb,MAAM,CAAC;EAEnE,IAAMc,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACL,cAAc,CAAC,CAACM,MAAM,CAE1D,UAACC,MAAM,QAA2B;IAAA;MAAxBC,QAAQ;MAAEN,QAAQ;IAC5B,IAAMO,KAAK,GAAGrB,MAAM,CAACsB,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,GAAG,KAAKJ,QAAQ;IAAA,EAAC;IAClD,IAAMK,YAAY,GAAG,IAAAjB,mBAAiB,EAAC;MACrCC,SAAS,EAAEP,cAAc;MACzBQ,UAAU,EAAE,CAAC;MACbC,YAAY,EAAEG,QAAQ;MACtBY,WAAW,EAAEL;IACf,CAAC,CAAC;IACF,qDAAWF,MAAM,IAAEM,YAAY;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,QAAQlB,gBAAgB,6CAAKQ,cAAc;AAC7C,CAAC;AAAA"}