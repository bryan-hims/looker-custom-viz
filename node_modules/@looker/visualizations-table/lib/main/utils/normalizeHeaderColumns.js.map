{"version":3,"file":"normalizeHeaderColumns.js","names":["normalizeHeaderColumns","table","getHeaderGroups","map","headerGroup","headers","flatMap","header","colSpan","spacerArray","Array","fill"],"sources":["../../../src/utils/normalizeHeaderColumns.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { SDKRecord } from '@looker/visualizations-adapters'\nimport type { Header, Table } from '@tanstack/react-table'\n\n/**\n * If any header elements span multiple columns, we need\n * to fill in empty array elements to keep data columns aligned\n * with header columns.\n * @param table: a tanstack table object\n * @returns An array of header rows that all have the same amount of columns.\n */\n\nexport const normalizeHeaderColumns = (table: Table<SDKRecord>) =>\n  table.getHeaderGroups().map(headerGroup => {\n    const headers = headerGroup.headers.flatMap(\n      (header): Array<Header<SDKRecord, unknown> | null> => {\n        if (header.colSpan > 1) {\n          const spacerArray: null[] = Array(header.colSpan - 1).fill(null)\n          return [header, ...spacerArray]\n        }\n        return [header]\n      }\n    )\n    return { ...headerGroup, headers }\n  })\n"],"mappings":";;;;;;;;;;;;AAeO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,KAAuB;EAAA,OAC5DA,KAAK,CAACC,eAAe,EAAE,CAACC,GAAG,CAAC,UAAAC,WAAW,EAAI;IACzC,IAAMC,OAAO,GAAGD,WAAW,CAACC,OAAO,CAACC,OAAO,CACzC,UAACC,MAAM,EAA+C;MACpD,IAAIA,MAAM,CAACC,OAAO,GAAG,CAAC,EAAE;QACtB,IAAMC,WAAmB,GAAGC,KAAK,CAACH,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;QAChE,QAAQJ,MAAM,6CAAKE,WAAW;MAChC;MACA,OAAO,CAACF,MAAM,CAAC;IACjB,CAAC,CACF;IACD,uCAAYH,WAAW;MAAEC,OAAO,EAAPA;IAAO;EAClC,CAAC,CAAC;AAAA;AAAA"}