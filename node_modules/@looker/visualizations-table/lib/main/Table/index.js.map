{"version":3,"file":"index.js","names":["Table","config","column_order","show_row_numbers","type","data","fields","DEFAULT_EMPTY_FIELDS","height","DEFAULT_HEIGHT","pivots","width","totals","defaultRowHeight","useTranslation","t","scrollContainer","useRef","useHeadlessTable","table","sorting","handleTableSort","tableRows","getRowModel","rows","dataToVirtualize","map","row","getVisibleCells","virtualizerAssets","useVirtual","virtualRows","virtualColumns","OffsetTop","OffsetBottom","OffsetLeft","OffsetRight","series","truncate_text","truncate_header","seriesMinMax","Object","fromEntries","measures","name","min","getSeriesMin","max","getSeriesMax","headerGroups","normalizeHeaderColumns","rowNumWidth","String","length","headerGroup","i","undefined","columnIndex","index","measureElement","size","header","headers","headerContent","column","columnDef","columnSortState","find","s","id","getSortAssets","SortIcon","sortText","ariaSort","colSpan","flexRender","getContext","e","rowIndex","tableRow","cell","measureIndex","findIndex","m","columnConfig","Array","isArray","cellContent","Infinity","valueFormat","get","CellValue","getValue","cell_visualization","color","Number","numeral","format","CellContentWrapper","children","truncateText","HeaderContentWrapper","truncateHeader","props","PlaceholderElement","styled","div","attrs","style","minWidth","ScrollWrapper","TableElement","theme","colors","text5","fonts","body","THead","thead","TFoot","tfoot","TBody","tbody","TableRow","tr","TableCell","ui1","background","CellContentLayout","space","xxsmall","TableHeadLayout","u16","IconButton","sortButtonDefaultVisible","css"],"sources":["../../../src/Table/index.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useRef } from 'react'\nimport type { FC } from 'react'\nimport type { TableProps, CTableSeries } from '@looker/visualizations-adapters'\nimport {\n  getSeriesMax,\n  getSeriesMin,\n  DEFAULT_HEIGHT,\n  DEFAULT_EMPTY_FIELDS,\n} from '@looker/visualizations-adapters'\nimport { flexRender } from '@tanstack/react-table'\nimport styled, { css } from 'styled-components'\nimport { IconButton, Truncate, Box, Grid } from '@looker/components'\nimport { useHeadlessTable, useVirtual } from '../hooks'\nimport { useTranslation, getSortAssets, normalizeHeaderColumns } from '../utils'\nimport { CellVisualization } from '../CellVisualization'\nimport { ColumnTotals } from '../ColumnTotals'\nimport { TableCell } from '../TableCell'\nimport { TableHeadCell } from '../TableHeadCell'\n\nimport numeral from 'numeral'\nimport get from 'lodash/get'\n\nexport const Table = ({\n  config = { column_order: [], show_row_numbers: true, type: 'table' },\n  data = [],\n  fields = DEFAULT_EMPTY_FIELDS,\n  height = DEFAULT_HEIGHT,\n  pivots,\n  width,\n  totals,\n  defaultRowHeight,\n}: TableProps) => {\n  const { t } = useTranslation('Table')\n\n  const scrollContainer = useRef<HTMLDivElement>(null)\n\n  const { table, sorting, handleTableSort } = useHeadlessTable({\n    data,\n    config,\n    fields,\n    pivots,\n  })\n\n  const tableRows = table.getRowModel().rows\n\n  const dataToVirtualize = tableRows.map(row => row.getVisibleCells())\n\n  const virtualizerAssets = useVirtual({\n    data: dataToVirtualize,\n    scrollContainer,\n    defaultRowHeight,\n  })\n\n  const {\n    virtualRows,\n    virtualColumns,\n    OffsetTop,\n    OffsetBottom,\n    OffsetLeft,\n    OffsetRight,\n  } = virtualizerAssets\n\n  const {\n    series = {},\n    show_row_numbers,\n    truncate_text,\n    truncate_header,\n  } = config\n\n  const seriesMinMax = Object.fromEntries(\n    fields.measures.map(({ name }) => {\n      const min = getSeriesMin(name, data)\n      const max = getSeriesMax(name, data)\n      return [name, { min, max }]\n    })\n  )\n\n  const headerGroups = normalizeHeaderColumns(table)\n\n  const rowNumWidth = String(data.length).length * 10\n\n  return (\n    <ScrollWrapper width={width} height={height} ref={scrollContainer}>\n      <TableElement cellSpacing=\"0\">\n        <THead>\n          {headerGroups.map((headerGroup, i) => {\n            return (\n              <tr key={`theadRow${i}`}>\n                <OffsetLeft as=\"th\" />\n\n                {show_row_numbers ? (\n                  <TableHeadCell stickyLeft>\n                    <PlaceholderElement width={rowNumWidth} />\n                  </TableHeadCell>\n                ) : undefined}\n\n                {virtualColumns.map(\n                  ({ index: columnIndex, measureElement, size }) => {\n                    const header = headerGroup.headers[columnIndex]\n\n                    if (header) {\n                      const { header: headerContent } = header.column.columnDef\n\n                      const columnSortState = sorting.find(\n                        s => s.id === header.id\n                      )\n\n                      const { SortIcon, sortText, ariaSort } = getSortAssets(\n                        t,\n                        columnSortState\n                      )\n\n                      return (\n                        <TableHeadCell\n                          key={header.id}\n                          colSpan={header.colSpan}\n                          aria-sort={ariaSort}\n                        >\n                          <TableHeadLayout\n                            sortButtonDefaultVisible={!!columnSortState}\n                            ref={measureElement}\n                            width={size}\n                          >\n                            <HeaderContentWrapper\n                              truncateHeader={!!truncate_header}\n                              data-testid=\"columnheader-label\"\n                            >\n                              {flexRender(headerContent, header.getContext())}\n                            </HeaderContentWrapper>\n                            {i === headerGroups.length - 1 && (\n                              /* only render sort button in last header row */\n                              <IconButton\n                                icon={<SortIcon />}\n                                label={sortText}\n                                outline\n                                shape=\"square\"\n                                size=\"xxsmall\"\n                                onClick={e => handleTableSort(header, e)}\n                              />\n                            )}\n                          </TableHeadLayout>\n                        </TableHeadCell>\n                      )\n                    } else {\n                      return null\n                    }\n                  }\n                )}\n\n                <OffsetRight as=\"th\" />\n              </tr>\n            )\n          })}\n        </THead>\n        <TBody>\n          <OffsetTop />\n          {virtualRows.map(({ index: rowIndex, measureElement, size }) => {\n            const tableRow = tableRows[rowIndex]\n\n            return (\n              <TableRow key={tableRow.id} ref={measureElement} height={size}>\n                <OffsetLeft />\n\n                {show_row_numbers ? (\n                  <TableCell stickyLeft>{rowIndex + 1}</TableCell>\n                ) : undefined}\n\n                {virtualColumns.map(({ index: columnIndex }) => {\n                  const { column, getContext, ...cell } =\n                    dataToVirtualize[rowIndex][columnIndex]\n\n                  const measureIndex = fields.measures.findIndex(\n                    m => m.name === column.id\n                  )\n                  const columnConfig: CTableSeries = Array.isArray(series)\n                    ? series[measureIndex]\n                    : series[column.id]\n\n                  const { cell: cellContent } = column.columnDef\n\n                  const { max, min } = seriesMinMax?.[column.id] || {\n                    max: Infinity,\n                    min: 0,\n                  }\n\n                  const valueFormat = Array.isArray(series)\n                    ? get(series, [measureIndex, 'value_format'])\n                    : get(series, [column.id, 'value_format'])\n\n                  const CellValue = cell.getValue()\n\n                  return (\n                    <TableCell key={cell.id}>\n                      {typeof CellValue === 'function' ? (\n                        <CellValue />\n                      ) : (\n                        <CellContentLayout>\n                          {columnConfig?.cell_visualization ? (\n                            <CellVisualization\n                              color={columnConfig.color}\n                              min={min}\n                              max={max}\n                              value={Number(cell.getValue())}\n                            />\n                          ) : null}\n                          <CellContentWrapper truncateText={!!truncate_text}>\n                            {valueFormat\n                              ? numeral(Number(cell.getValue())).format(\n                                  valueFormat\n                                )\n                              : flexRender(cellContent, getContext())}\n                          </CellContentWrapper>\n                        </CellContentLayout>\n                      )}\n                    </TableCell>\n                  )\n                })}\n              </TableRow>\n            )\n          })}\n          <OffsetBottom />\n        </TBody>\n        <TFoot>\n          <ColumnTotals\n            totals={totals}\n            config={config}\n            fields={fields}\n            virtualizerAssets={virtualizerAssets}\n            table={table}\n          />\n        </TFoot>\n      </TableElement>\n    </ScrollWrapper>\n  )\n}\n\n/**\n * Truncate table body content when truncateText is true\n */\nconst CellContentWrapper: FC<{ truncateText: boolean }> = ({\n  children,\n  truncateText,\n}) =>\n  truncateText ? (\n    <Grid columns={1} width=\"auto\">\n      <Truncate>{children}</Truncate>\n    </Grid>\n  ) : (\n    <>{children}</>\n  )\n\n/**\n * Truncate header text when truncateHeader is true\n */\nconst HeaderContentWrapper: FC<{ truncateHeader: boolean }> = ({\n  truncateHeader,\n  ...props\n}) => (truncateHeader ? <Truncate {...props} /> : <Box {...props} />)\n\nconst PlaceholderElement = styled.div.attrs<{ width?: number }>(\n  ({ width }) => ({ style: { minWidth: width } })\n)<{ width?: number }>``\n\nconst ScrollWrapper = styled.div<{ width?: number; height: number }>`\n  max-height: ${({ height }) => `${height}px`};\n  overflow: auto;\n  max-width: ${({ width }) => (width ? `${width}px` : `100%`)};\n  position: relative;\n`\n\nconst TableElement = styled.table`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.text5};\n  font-family: ${({ theme }) => theme.fonts.body};\n`\n\nconst THead = styled.thead`\n  top: 0;\n  position: sticky;\n  z-index: 1;\n`\n\nconst TFoot = styled.tfoot`\n  position: sticky;\n  bottom: 0px;\n`\n\nconst TBody = styled.tbody`\n  position: relative;\n  z-index: 0;\n`\n\nconst TableRow = styled.tr.attrs<{ height?: number }>(({ height }) => ({\n  height,\n}))<{ height?: number }>`\n  :nth-child(even) {\n    ${TableCell} {\n      background-color: ${({ theme }) => theme.colors.ui1};\n    }\n  }\n  :nth-child(odd) {\n    ${TableCell} {\n      background-color: ${({ theme }) => theme.colors.background};\n    }\n  }\n`\n\nconst CellContentLayout = styled.div`\n  align-items: center;\n  display: flex;\n  gap: ${({ theme }) => theme.space.xxsmall};\n`\n\nconst TableHeadLayout = styled.div.attrs<{ width?: number }>(({ width }) => ({\n  style: { minWidth: width },\n}))<{ width?: number; sortButtonDefaultVisible?: boolean }>`\n  display: grid;\n  grid-template-columns: minMax(${({ theme }) => theme.space.u16}, 1fr) auto;\n  grid-gap: ${({ theme }) => theme.space.xxsmall};\n  ${IconButton} {\n    ${({ sortButtonDefaultVisible }) =>\n      sortButtonDefaultVisible\n        ? css`\n            visibility: visible;\n          `\n        : css`\n            visibility: hidden;\n          `}\n  }\n  &:hover {\n    ${IconButton} {\n      visibility: visible;\n    }\n  }\n`\n"],"mappings":"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"}