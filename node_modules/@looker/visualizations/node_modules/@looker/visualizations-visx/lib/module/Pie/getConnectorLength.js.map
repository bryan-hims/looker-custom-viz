{"version":3,"file":"getConnectorLength.js","names":["pointRadial","LABEL_OFFSET","getConnectorLength","angle","outerRadius","_","connectorY","yPosPercent","Math","abs","connectorLength","pow","exp"],"sources":["../../../src/Pie/getConnectorLength.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { pointRadial } from 'd3-shape'\nconst LABEL_OFFSET = 10\n\n/**\n * Utility function calculates the radial X/Y position used for Visx's Annotation component.\n *\n * @param angle the angle (in radians) associated with the arc to be labeled\n * @param outerRadius the radius (in pixels) of the pie chart\n * @returns\n */\n\nexport const getConnectorLength = (angle: number, outerRadius: number) => {\n  // get the connector anchor position\n  const [_, connectorY] = pointRadial(angle, outerRadius)\n\n  // calculate how far from center line the label is rendered on the y axis\n  // 0% indicates that it is vertically centered in the Pie.\n  // 100% indicates that it is at the top or bottom of the Pie.\n  const yPosPercent = Math.abs(connectorY / outerRadius)\n\n  // lengthen connector at the upper or lower bounds of the circle to minimize text collisions\n  const connectorLength =\n    Math.pow(1.15, Math.exp(yPosPercent * 3.37)) + LABEL_OFFSET\n\n  return connectorLength\n}\n"],"mappings":";AAIA,SAASA,WAAW,QAAQ,UAAU;AACtC,MAAMC,YAAY,GAAG,EAAE;;AAUvB,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAa,EAAEC,WAAmB,KAAK;EAExE,MAAM,CAACC,CAAC,EAAEC,UAAU,CAAC,GAAGN,WAAW,CAACG,KAAK,EAAEC,WAAW,CAAC;;EAKvD,MAAMG,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACH,UAAU,GAAGF,WAAW,CAAC;;EAGtD,MAAMM,eAAe,GACnBF,IAAI,CAACG,GAAG,CAAC,IAAI,EAAEH,IAAI,CAACI,GAAG,CAACL,WAAW,GAAG,IAAI,CAAC,CAAC,GAAGN,YAAY;EAE7D,OAAOS,eAAe;AACxB,CAAC"}