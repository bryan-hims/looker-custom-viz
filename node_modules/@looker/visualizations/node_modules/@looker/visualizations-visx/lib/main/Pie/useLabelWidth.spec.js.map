{"version":3,"file":"useLabelWidth.spec.js","names":["wrapper","children","describe","test","data","albany","albuquerque","legend","type","value","renderHook","useLabelWidth","result","unmount","expect","current","toEqual","MIN_LABEL_SPACE","cleanup"],"sources":["../../../src/Pie/useLabelWidth.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { CPie } from '@looker/visualizations-adapters'\nimport { renderHook, cleanup } from '@testing-library/react-hooks'\nimport { ComponentsProvider } from '@looker/components-providers'\nimport { useLabelWidth, MIN_LABEL_SPACE } from './useLabelWidth'\n\nconst wrapper = ({ children }: React.PropsWithChildren<unknown>) => (\n  <ComponentsProvider>{children}</ComponentsProvider>\n)\n\ndescribe('useLabelWidth', () => {\n  test('calculates the width of the longest label in a set', async () => {\n    const data = { albany: 20, albuquerque: 20 }\n    const legend: CPie['legend'] = { type: 'legend', value: 'label_percent' }\n\n    const { result, unmount } = renderHook(\n      () => useLabelWidth(40, data, legend),\n      {\n        wrapper,\n      }\n    )\n\n    // the min label size will be returned as no real dom measurements will\n    // take place in the jest virtual dom\n    expect(result.current).toEqual(MIN_LABEL_SPACE)\n\n    // silence act(...) warning\n    unmount()\n    await cleanup()\n  })\n})\n"],"mappings":";;;;AAKA;AAEA;AACA;AACA;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAO;EAAA,IAAMC,QAAQ,QAARA,QAAQ;EAAA,OACzB,gCAAC,uCAAkB,QAAEA,QAAQ,CAAsB;AAAA,CACpD;AAEDC,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,IAAI,CAAC,oDAAoD,6DAAE;IAAA;IAAA;MAAA;QAAA;UACnDC,IAAI,GAAG;YAAEC,MAAM,EAAE,EAAE;YAAEC,WAAW,EAAE;UAAG,CAAC;UACtCC,MAAsB,GAAG;YAAEC,IAAI,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAgB,CAAC;UAAA,cAE7C,IAAAC,sBAAU,EACpC;YAAA,OAAM,IAAAC,4BAAa,EAAC,EAAE,EAAEP,IAAI,EAAEG,MAAM,CAAC;UAAA,GACrC;YACEP,OAAO,EAAPA;UACF,CAAC,CACF,EALOY,MAAM,eAANA,MAAM,EAAEC,OAAO,eAAPA,OAAO;UASvBC,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,OAAO,CAACC,8BAAe,CAAC;;UAG/CJ,OAAO,EAAE;UAAA;UAAA,OACH,IAAAK,mBAAO,GAAE;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChB,GAAC;AACJ,CAAC,CAAC"}