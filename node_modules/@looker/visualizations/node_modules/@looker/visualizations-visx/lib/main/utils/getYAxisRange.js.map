{"version":3,"file":"getYAxisRange.js","names":["getYAxisRange","config","data","fields","y_axis","range","configMin","configMax","getDataRange","dataMin","dataMax","min","Math","floor","Number","max","ceil"],"sources":["../../../src/utils/getYAxisRange.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ContinuousDomain, ContinuousInput } from '@visx/scale'\nimport type { GetDataRangeProps } from '@looker/visualizations-adapters'\nimport { getDataRange } from '@looker/visualizations-adapters'\n\n/**\n * Returns a 2-tuple where the first element is the y-axis min\n * and the second element is the y-axis max\n */\nexport const getYAxisRange = ({\n  config,\n  data,\n  fields,\n}: GetDataRangeProps): ContinuousDomain => {\n  const [configMin = 'auto', configMax = 'auto'] =\n    config?.y_axis?.[0]?.range || []\n\n  const [dataMin, dataMax] = getDataRange({ config, data, fields })\n\n  const min: ContinuousInput =\n    configMin === 'auto' ? Math.min(0, Math.floor(dataMin)) : Number(configMin)\n  const max: ContinuousInput =\n    configMax === 'auto' ? Math.max(0, Math.ceil(dataMax)) : Number(configMax)\n\n  return [min, max]\n}\n"],"mappings":";;;;;;;;AAOA;;AAMO,IAAMA,aAAa,GAAG,SAAhBA,aAAa,OAIiB;EAAA;EAAA,IAHzCC,MAAM,QAANA,MAAM;IACNC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;EAEN,YACE,CAAAF,MAAM,aAANA,MAAM,yCAANA,MAAM,CAAEG,MAAM,sEAAd,eAAiB,CAAC,CAAC,oDAAnB,gBAAqBC,KAAK,KAAI,EAAE;IAAA;IAAA;IAD3BC,SAAS,uBAAG,MAAM;IAAA;IAAEC,SAAS,wBAAG,MAAM;EAG7C,oBAA2B,IAAAC,oCAAY,EAAC;MAAEP,MAAM,EAANA,MAAM;MAAEC,IAAI,EAAJA,IAAI;MAAEC,MAAM,EAANA;IAAO,CAAC,CAAC;IAAA;IAA1DM,OAAO;IAAEC,OAAO;EAEvB,IAAMC,GAAoB,GACxBL,SAAS,KAAK,MAAM,GAAGM,IAAI,CAACD,GAAG,CAAC,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,CAAC,GAAGK,MAAM,CAACR,SAAS,CAAC;EAC7E,IAAMS,GAAoB,GACxBR,SAAS,KAAK,MAAM,GAAGK,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACI,IAAI,CAACN,OAAO,CAAC,CAAC,GAAGI,MAAM,CAACP,SAAS,CAAC;EAE5E,OAAO,CAACI,GAAG,EAAEI,GAAG,CAAC;AACnB,CAAC;AAAA"}