{"version":3,"file":"seriesLabelFormatter.js","names":["seriesLabelFormatter","fields","config","item","closestSeries","pickSeriesByName","field","find","measures","dimensions","name","pivoted_label","fallback","split","pop","label","replace"],"sources":["../../../src/utils/seriesLabelFormatter.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { pickSeriesByName } from '@looker/visualizations-adapters'\nimport type {\n  CCartesian,\n  Fields,\n  MeasureMetadata,\n} from '@looker/visualizations-adapters'\nimport find from 'lodash/find'\n\n/**\n * Return the properly formatted field name when provided a series key.\n *\n * @param fields the Fields object as returned by the sdk\n * @param series the config.series object or array\n * @param item a string representing the field name\n * @returns string\n */\n\nexport const seriesLabelFormatter = (\n  fields: Fields,\n  config: CCartesian,\n  item: string\n) => {\n  const closestSeries = pickSeriesByName(fields, config, item)\n\n  const field = find([...fields.measures, ...fields.dimensions], { name: item })\n\n  const pivoted_label = field && (field as MeasureMetadata)?.pivoted_label\n\n  const fallback = item.split('.').pop() || ''\n\n  return (\n    closestSeries.label ||\n    pivoted_label ||\n    field?.label ||\n    fallback.replace(/_/g, ' ')\n  )\n}\n"],"mappings":";;;;;;;;AAKA;AAMA;;AAWO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoB,CAC/BC,MAAc,EACdC,MAAkB,EAClBC,IAAY,EACT;EACH,IAAMC,aAAa,GAAG,IAAAC,wCAAgB,EAACJ,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC;EAE5D,IAAMG,KAAK,GAAG,IAAAC,gBAAI,gDAAKN,MAAM,CAACO,QAAQ,uCAAKP,MAAM,CAACQ,UAAU,IAAG;IAAEC,IAAI,EAAEP;EAAK,CAAC,CAAC;EAE9E,IAAMQ,aAAa,GAAGL,KAAK,KAAKA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAsBK,aAAa;EAExE,IAAMC,QAAQ,GAAGT,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,IAAI,EAAE;EAE5C,OACEV,aAAa,CAACW,KAAK,IACnBJ,aAAa,KACbL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,KAAK,KACZH,QAAQ,CAACI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAE/B,CAAC;AAAA"}